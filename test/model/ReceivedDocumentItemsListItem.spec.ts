/**
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import { expect } from 'chai';
import { ReceivedDocumentItemsListItem } from '../../src/models';

  var instance: ReceivedDocumentItemsListItem = {
    id: 12345,
    product_id: 54321,
    code: "pdr01",
    measure: "very big",
    name: "prod uan",
    net_price: 100,
    category: "other",
    qty: 1,
    stock: 99,
    vat: {
      id : 1020,
      value : 0,
      description : "PA Non imp art. 2",
      is_disabled : false
    }  
  };

  beforeEach(function() {
  });


  describe('ReceivedDocumentItemsList', function() {
    it('should create an instance of ReceivedDocumentItemsListItem', function() {
      expect(instance).to.be.a('object');
    });

    it('should have the property id (base name: "id")', function() {
      expect(instance.id).to.be.a('number');
    });

    it('should have the property productId (base name: "product_id")', function() {
      expect(instance.product_id).to.be.a('number');
    });

    it('should have the property code (base name: "code")', function() {
      expect(instance.code).to.be.a('string');
    });

    it('should have the property name (base name: "name")', function() {
      expect(instance.name).to.be.a('string');
    });

    it('should have the property measure (base name: "measure")', function() {
      expect(instance.measure).to.be.a('string');
    });

    it('should have the property netPrice (base name: "net_price")', function() {
      expect(instance.net_price).to.be.a('number');
    });

    it('should have the property category (base name: "category")', function() {
      expect(instance.category).to.be.a('string');
    });

    it('should have the property qty (base name: "qty")', function() {
      expect(instance.qty).to.be.a('number');
    });

    it('should have the property vat (base name: "vat")', function() {
      expect(instance.vat).to.be.a('object');
    });

    it('should have the property stock (base name: "stock")', function() {
      expect(instance.stock).to.be.a('number');
    });

  });
